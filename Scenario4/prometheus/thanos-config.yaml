apiVersion: v1
kind: ConfigMap
metadata:
  name: thanos-objstore-config
  namespace: observability
data:
  objstore.yml: |
    type: S3
    config:
      bucket: thanos-metrics
      endpoint: s3.amazonaws.com
      region: us-east-1
      access_key: ${AWS_ACCESS_KEY_ID}
      secret_key: ${AWS_SECRET_ACCESS_KEY}
      insecure: false
      signature_version2: false
      encrypt_sse: true
      put_user_metadata: {}
      http_config:
        idle_conn_timeout: 90s
        response_header_timeout: 2m
        insecure_skip_verify: false
      trace:
        enable: true
      part_size: 134217728
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: thanos-receive
  namespace: observability
  labels:
    app: thanos-receive
spec:
  replicas: 3
  selector:
    matchLabels:
      app: thanos-receive
  serviceName: thanos-receive
  template:
    metadata:
      labels:
        app: thanos-receive
    spec:
      containers:
      - name: thanos-receive
        image: quay.io/thanos/thanos:v0.28.0
        args:
        - receive
        - --grpc-address=0.0.0.0:10901
        - --http-address=0.0.0.0:10902
        - --remote-write.address=0.0.0.0:19291
        - --objstore.config-file=/etc/thanos/objstore.yml
        - --tsdb.path=/var/thanos/receive
        - --tsdb.retention=48h
        - --label=replica="$(POD_NAME)"
        - --label=receive="true"
        - --receive.replication-factor=2
        - --receive.local-endpoint=$(POD_NAME).thanos-receive.$(NAMESPACE).svc.cluster.local:10901
        - --receive.hashrings-file=/etc/thanos/hashrings.json
        ports:
        - name: http
          containerPort: 10902
        - name: grpc
          containerPort: 10901
        - name: remote-write
          containerPort: 19291
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: thanos-objstore
              key: aws_access_key_id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: thanos-objstore
              key: aws_secret_access_key
        volumeMounts:
        - name: thanos-objstore-config
          mountPath: /etc/thanos
        - name: data
          mountPath: /var/thanos/receive
        resources:
          requests:
            cpu: 1
            memory: 2Gi
          limits:
            cpu: 2
            memory: 4Gi
      volumes:
      - name: thanos-objstore-config
        configMap:
          name: thanos-objstore-config
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 100Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: thanos-store
  namespace: observability
  labels:
    app: thanos-store
spec:
  replicas: 3
  selector:
    matchLabels:
      app: thanos-store
  serviceName: thanos-store
  template:
    metadata:
      labels:
        app: thanos-store
    spec:
      containers:
      - name: thanos-store
        image: quay.io/thanos/thanos:v0.28.0
        args:
        - store
        - --grpc-address=0.0.0.0:10901
        - --http-address=0.0.0.0:10902
        - --objstore.config-file=/etc/thanos/objstore.yml
        - --data-dir=/var/thanos/store
        - --index-cache-size=2GB
        - --chunk-pool-size=2GB
        ports:
        - name: http
          containerPort: 10902
        - name: grpc
          containerPort: 10901
        env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: thanos-objstore
              key: aws_access_key_id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: thanos-objstore
              key: aws_secret_access_key
        volumeMounts:
        - name: thanos-objstore-config
          mountPath: /etc/thanos
        - name: data
          mountPath: /var/thanos/store
        resources:
          requests:
            cpu: 1
            memory: 2Gi
          limits:
            cpu: 2
            memory: 4Gi
      volumes:
      - name: thanos-objstore-config
        configMap:
          name: thanos-objstore-config
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 100Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: thanos-query
  namespace: observability
  labels:
    app: thanos-query
spec:
  replicas: 2
  selector:
    matchLabels:
      app: thanos-query
  template:
    metadata:
      labels:
        app: thanos-query
    spec:
      containers:
      - name: thanos-query
        image: quay.io/thanos/thanos:v0.28.0
        args:
        - query
        - --grpc-address=0.0.0.0:10901
        - --http-address=0.0.0.0:10902
        - --store=thanos-store-0.thanos-store.observability.svc.cluster.local:10901
        - --store=thanos-store-1.thanos-store.observability.svc.cluster.local:10901
        - --store=thanos-store-2.thanos-store.observability.svc.cluster.local:10901
        - --store=thanos-receive-0.thanos-receive.observability.svc.cluster.local:10901
        - --store=thanos-receive-1.thanos-receive.observability.svc.cluster.local:10901
        - --store=thanos-receive-2.thanos-receive.observability.svc.cluster.local:10901
        - --query.replica-label=replica
        ports:
        - name: http
          containerPort: 10902
        - name: grpc
          containerPort: 10901
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 1
            memory: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: thanos-compactor
  namespace: observability
  labels:
    app: thanos-compactor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: thanos-compactor
  template:
    metadata:
      labels:
        app: thanos-compactor
    spec:
      containers:
      - name: thanos-compactor
        image: quay.io/thanos/thanos:v0.28.0
        args:
        - compact
        - --http-address=0.0.0.0:10902
        - --objstore.config-file=/etc/thanos/objstore.yml
        - --data-dir=/var/thanos/compactor
        - --retention.resolution-raw=30d
        - --retention.resolution-5m=90d
        - --retention.resolution-1h=1y
        - --downsampling.disable=false
        ports:
        - name: http
          containerPort: 10902
        env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: thanos-objstore
              key: aws_access_key_id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: thanos-objstore
              key: aws_secret_access_key
        volumeMounts:
        - name: thanos-objstore-config
          mountPath: /etc/thanos
        - name: data
          mountPath: /var/thanos/compactor
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 1
            memory: 2Gi
      volumes:
      - name: thanos-objstore-config
        configMap:
          name: thanos-objstore-config
      - name: data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: thanos-receive
  namespace: observability
  labels:
    app: thanos-receive
spec:
  ports:
  - name: http
    port: 10902
    targetPort: 10902
  - name: grpc
    port: 10901
    targetPort: 10901
  - name: remote-write
    port: 19291
    targetPort: 19291
  selector:
    app: thanos-receive
  clusterIP: None
---
apiVersion: v1
kind: Service
metadata:
  name: thanos-store
  namespace: observability
  labels:
    app: thanos-store
spec:
  ports:
  - name: http
    port: 10902
    targetPort: 10902
  - name: grpc
    port: 10901
    targetPort: 10901
  selector:
    app: thanos-store
  clusterIP: None
---
apiVersion: v1
kind: Service
metadata:
  name: thanos-query
  namespace: observability
  labels:
    app: thanos-query
spec:
  ports:
  - name: http
    port: 10902
    targetPort: 10902
  - name: grpc
    port: 10901
    targetPort: 10901
  selector:
    app: thanos-query
---
apiVersion: v1
kind: Service
metadata:
  name: thanos-compactor
  namespace: observability
  labels:
    app: thanos-compactor
spec:
  ports:
  - name: http
    port: 10902
    targetPort: 10902
  selector:
    app: thanos-compactor
